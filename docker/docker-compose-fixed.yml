name: pathfinder-test
services:
  pathfinder-test:
    container_name: pathfinder-test
    depends_on:
      test-database:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    environment:
      - DB_USER=loot_user
      - DB_HOST=test-database
      - DB_NAME=loot_tracking
      - DB_PASSWORD=${TEST_DB_PASSWORD}
      - DB_PORT=5432
      - PORT=5000
      - NODE_ENV=production
      - GROUP_NAME=Test Campaign
      - JWT_SECRET=${TEST_JWT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - >-
        ALLOWED_ORIGINS=http://192.168.0.64:30202,https://test.kempsonandko.com,http://test.kempsonandko.com
      - FRONTEND_URL=https://test.kempsonandko.com
      # Removed LOG_DIR to use container-internal storage
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 60s
      test:
        - CMD
        - node
        - '-e'
        - >-
          const http = require('http'); const options = { hostname: 'localhost',
          port: 5000, path: '/api/health', timeout: 2000 }; const req =
          http.request(options, (res) => { if (res.statusCode === 200)
          process.exit(0); else process.exit(1); }); req.on('error', () =>
          process.exit(1)); req.on('timeout', () => process.exit(1)); req.end();
      timeout: 10s
    image: pathfinder-loot:dev
    ports:
      - '30202:5000'
    restart: unless-stopped
    # Removed all volume mounts for logs, migrations, and data to use container-internal storage
  test-database:
    container_name: test-database
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    environment:
      - POSTGRES_USER=loot_user
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - POSTGRES_DB=loot_tracking
    healthcheck:
      interval: 10s
      retries: 5
      start_period: 30s
      test:
        - CMD-SHELL
        - pg_isready -U loot_user -d loot_tracking
      timeout: 5s
    image: postgres:16
    restart: unless-stopped
    volumes:
      - /mnt/torchwood/databases/pathfinder/test/pgdata:/var/lib/postgresql/data
      - >-
        /mnt/sonicscrewdriver/config/pathfinder/Loot-Tracker-PF1e/database/00-extensions.sql:/docker-entrypoint-initdb.d/00-extensions.sql
      - >-
        /mnt/sonicscrewdriver/config/pathfinder/Loot-Tracker-PF1e/database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - >-
        /mnt/sonicscrewdriver/config/pathfinder/Loot-Tracker-PF1e/database/item_data.sql:/docker-entrypoint-initdb.d/02-item_data.sql
      - >-
        /mnt/sonicscrewdriver/config/pathfinder/Loot-Tracker-PF1e/database/mod_data.sql:/docker-entrypoint-initdb.d/03-mod_data.sql
      - >-
        /mnt/sonicscrewdriver/config/pathfinder/Loot-Tracker-PF1e/database/min_caster_levels_data.sql:/docker-entrypoint-initdb.d/04-min_caster_levels_data.sql
      - >-
        /mnt/sonicscrewdriver/config/pathfinder/Loot-Tracker-PF1e/database/min_costs_data.sql:/docker-entrypoint-initdb.d/05-min_costs_data.sql
      - >-
        /mnt/sonicscrewdriver/config/pathfinder/Loot-Tracker-PF1e/database/spells_data.sql:/docker-entrypoint-initdb.d/06-spells_data.sql
      - >-
        /mnt/sonicscrewdriver/config/pathfinder/Loot-Tracker-PF1e/database/weather_regions_data.sql:/docker-entrypoint-initdb.d/07-weather_regions_data.sql
      - >-
        /mnt/sonicscrewdriver/config/pathfinder/Loot-Tracker-PF1e/database/impositions_data.sql:/docker-entrypoint-initdb.d/08-impositions_data.sql
      - >-
        /mnt/sonicscrewdriver/config/pathfinder/Loot-Tracker-PF1e/database/sessions.sql:/docker-entrypoint-initdb.d/09-sessions.sql

# Removed all volume definitions since we're not using external volumes for the app
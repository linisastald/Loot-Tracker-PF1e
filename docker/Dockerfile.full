# Build frontend
FROM node:18 as frontend-build
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm install
COPY frontend .
ARG REACT_APP_API_URL
ENV REACT_APP_API_URL=$REACT_APP_API_URL

RUN npm run build

# Build backend
FROM node:18 as backend-build
WORKDIR /app/backend
COPY backend/package*.json ./
RUN npm install
COPY backend .

# Final stage
FROM nginx:alpine

# Build arguments for metadata
ARG BUILD_DATE
ARG GIT_COMMIT
ARG BUILD_TYPE

# Add metadata labels
LABEL maintainer="Pathfinder Loot Tracker Team"
LABEL org.opencontainers.image.created=$BUILD_DATE
LABEL org.opencontainers.image.revision=$GIT_COMMIT
LABEL org.opencontainers.image.title="Pathfinder Loot Tracker"
LABEL org.opencontainers.image.description="Full-stack Pathfinder 1e loot and campaign management system"
LABEL build.type=$BUILD_TYPE

# Install Node.js and PostgreSQL client
RUN apk add --no-cache nodejs npm postgresql-client

# Create app directories
RUN mkdir -p /app/logs /app/data

# Copy backend
COPY --from=backend-build /app/backend /app/backend

# Copy frontend build
COPY --from=frontend-build /app/frontend/build /usr/share/nginx/html

# Copy database initialization scripts
COPY database/*.sql /app/database/

# Set execute permissions on start script
COPY start.sh /app/
RUN chmod +x /app/start.sh

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80

CMD ["/app/start.sh"]
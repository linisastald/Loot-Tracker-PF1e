-- Add combat stats to ships table\n-- This migration adds proper combat statistics based on the Pathfinder ship sheet\n-- Updated to safely add columns only if they don't exist\n\n-- Function to safely add columns\nCREATE OR REPLACE FUNCTION add_column_if_not_exists(tbl_name text, col_name text, col_definition text)\nRETURNS void AS $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM information_schema.columns \n        WHERE table_name = tbl_name AND column_name = col_name\n    ) THEN\n        EXECUTE format('ALTER TABLE %I ADD COLUMN %I %s', tbl_name, col_name, col_definition);\n    END IF;\nEND;\n$$ LANGUAGE plpgsql;\n\n-- Add ship type and additional fields\nSELECT add_column_if_not_exists('ships', 'ship_type', 'VARCHAR(50)');\nSELECT add_column_if_not_exists('ships', 'size', 'VARCHAR(20) DEFAULT ''Colossal''');\nSELECT add_column_if_not_exists('ships', 'cost', 'INTEGER DEFAULT 0');\nSELECT add_column_if_not_exists('ships', 'max_speed', 'INTEGER DEFAULT 30');\nSELECT add_column_if_not_exists('ships', 'acceleration', 'INTEGER DEFAULT 15');\nSELECT add_column_if_not_exists('ships', 'propulsion', 'VARCHAR(100)');\nSELECT add_column_if_not_exists('ships', 'min_crew', 'INTEGER DEFAULT 1');\nSELECT add_column_if_not_exists('ships', 'max_crew', 'INTEGER DEFAULT 10');\nSELECT add_column_if_not_exists('ships', 'cargo_capacity', 'INTEGER DEFAULT 10000');\nSELECT add_column_if_not_exists('ships', 'max_passengers', 'INTEGER DEFAULT 10');\nSELECT add_column_if_not_exists('ships', 'decks', 'INTEGER DEFAULT 1');\nSELECT add_column_if_not_exists('ships', 'weapons', 'INTEGER DEFAULT 0');\nSELECT add_column_if_not_exists('ships', 'ramming_damage', 'VARCHAR(20) DEFAULT ''1d8''');\n\n-- Add new combat stat columns\nSELECT add_column_if_not_exists('ships', 'base_ac', 'INTEGER DEFAULT 10');\nSELECT add_column_if_not_exists('ships', 'touch_ac', 'INTEGER DEFAULT 10');\nSELECT add_column_if_not_exists('ships', 'hardness', 'INTEGER DEFAULT 0');\nSELECT add_column_if_not_exists('ships', 'max_hp', 'INTEGER DEFAULT 100');\nSELECT add_column_if_not_exists('ships', 'current_hp', 'INTEGER DEFAULT 100');\nSELECT add_column_if_not_exists('ships', 'cmb', 'INTEGER DEFAULT 0');\nSELECT add_column_if_not_exists('ships', 'cmd', 'INTEGER DEFAULT 10');\nSELECT add_column_if_not_exists('ships', 'saves', 'INTEGER DEFAULT 0');\nSELECT add_column_if_not_exists('ships', 'initiative', 'INTEGER DEFAULT 0');\n\n-- Convert existing damage percentage to HP system (only if both columns exist)\nDO $$\nBEGIN\n    IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'ships' AND column_name = 'damage')\n       AND EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'ships' AND column_name = 'current_hp') THEN\n        UPDATE ships \n        SET current_hp = GREATEST(0, max_hp - ROUND((damage / 100.0) * max_hp))\n        WHERE damage IS NOT NULL AND damage > 0;\n    END IF;\nEND $$;\n\n-- Create a backup of old damage values\nSELECT add_column_if_not_exists('ships', 'legacy_damage', 'INTEGER');\nDO $$\nBEGIN\n    IF EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'ships' AND column_name = 'damage')\n       AND EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'ships' AND column_name = 'legacy_damage') THEN\n        UPDATE ships SET legacy_damage = damage;\n    END IF;\nEND $$;\n\n-- Add constraints only if columns exist\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM information_schema.table_constraints \n        WHERE constraint_name = 'ships_hp_check' AND table_name = 'ships'\n    ) AND EXISTS (\n        SELECT 1 FROM information_schema.columns \n        WHERE table_name = 'ships' AND column_name IN ('current_hp', 'max_hp')\n        GROUP BY table_name HAVING COUNT(*) = 2\n    ) THEN\n        ALTER TABLE ships ADD CONSTRAINT ships_hp_check \n            CHECK (current_hp >= 0 AND current_hp <= max_hp);\n    END IF;\nEND $$;\n\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM information_schema.table_constraints \n        WHERE constraint_name = 'ships_ac_check' AND table_name = 'ships'\n    ) AND EXISTS (\n        SELECT 1 FROM information_schema.columns \n        WHERE table_name = 'ships' AND column_name IN ('base_ac', 'touch_ac')\n        GROUP BY table_name HAVING COUNT(*) = 2\n    ) THEN\n        ALTER TABLE ships ADD CONSTRAINT ships_ac_check \n            CHECK (base_ac >= 0 AND base_ac <= 50 AND touch_ac >= 0 AND touch_ac <= 50);\n    END IF;\nEND $$;\n\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM information_schema.table_constraints \n        WHERE constraint_name = 'ships_crew_check' AND table_name = 'ships'\n    ) AND EXISTS (\n        SELECT 1 FROM information_schema.columns \n        WHERE table_name = 'ships' AND column_name IN ('min_crew', 'max_crew')\n        GROUP BY table_name HAVING COUNT(*) = 2\n    ) THEN\n        ALTER TABLE ships ADD CONSTRAINT ships_crew_check \n            CHECK (min_crew >= 0 AND max_crew >= min_crew);\n    END IF;\nEND $$;\n\nDO $$\nBEGIN\n    IF NOT EXISTS (\n        SELECT 1 FROM information_schema.table_constraints \n        WHERE constraint_name = 'ships_capacity_check' AND table_name = 'ships'\n    ) AND EXISTS (\n        SELECT 1 FROM information_schema.columns \n        WHERE table_name = 'ships' AND column_name IN ('cargo_capacity', 'max_passengers')\n        GROUP BY table_name HAVING COUNT(*) = 2\n    ) THEN\n        ALTER TABLE ships ADD CONSTRAINT ships_capacity_check \n            CHECK (cargo_capacity >= 0 AND max_passengers >= 0);\n    END IF;\nEND $$;\n\n-- Drop the helper function\nDROP FUNCTION IF EXISTS add_column_if_not_exists(text, text, text);
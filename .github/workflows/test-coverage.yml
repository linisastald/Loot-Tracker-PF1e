name: Test Coverage

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check for test files
      run: find src -name "*.test.js" -o -name "*.test.jsx" | head -10
    
    - name: Run tests with coverage
      run: npm run test:ci
      env:
        CI: true
        NODE_OPTIONS: --max-old-space-size=4096
    
    - name: Upload frontend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false
    
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        lcov-file: ./frontend/coverage/lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}
        title: Frontend Coverage Report

  test-backend:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pathfinder_loot_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check for test files
      run: find tests src -name "*.test.js" -o -name "*.spec.js" | head -10
    
    - name: Run tests with coverage
      run: npm run test:ci
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: pathfinder_loot_test
        TEST_DB_NAME: pathfinder_loot_test
        JWT_SECRET: test-jwt-secret-key
        OPENAI_API_KEY: test-openai-key
        NODE_OPTIONS: --max-old-space-size=4096
    
    - name: Upload backend coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./backend/coverage/lcov.info
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false
    
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        lcov-file: ./backend/coverage/lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}
        title: Backend Coverage Report

  coverage-summary:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    if: always()
    
    steps:
    - name: Coverage Summary
      run: |
        echo "## Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- Frontend tests: ${{ needs.test-frontend.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Backend tests: ${{ needs.test-backend.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Detailed coverage reports are available in the job artifacts and Codecov." >> $GITHUB_STEP_SUMMARY